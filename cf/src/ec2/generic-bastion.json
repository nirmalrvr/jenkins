{
  "Parameters" : {
    "KeyName" : {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type" : "String"
    },
	"InstanceType" : {
      "Description" : "EC2 instance type",
      "Type" : "String",
      "Default" : "t2.medium",
      "AllowedValues" : [ "t2.micro", "t2.small", "t2.medium", "m1.small", "m1.medium", "m1.large"],
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },
	"VPCID" : {
      "Description" : "VPC ID of the foundation VPC",
      "Type" : "AWS::EC2::VPC::Id"
    },
	"AMIID" : {
      "Description" : "AMI ID with which to spawn Bastion node",
      "Type" : "AWS::EC2::Image::Id"
    },
	"SubnetID" : {
      "Description" : "Subnet ID to which to attach the Bastion instance",
      "Type" : "AWS::EC2::Subnet::Id"
    },
	"VolumeSize": {
      "Default": "64",
      "Description" : "EBS Volume Size in GB",
      "Type": "Number",
      "MinValue": "10",
      "MaxValue": "512"
    },
	"Environment" : {
      "Description" : "The environment to which the nodes belong to",
      "Type" : "String",
      "AllowedValues" : [ "dev", "pie", "qual01", "qual02", "ref01","ref02","ref03", "load", "stage", "prod" , "ops"],
      "ConstraintDescription" : "Must be valid environment name"
    },
	"Pod" : {
      "Description" : "Name of the pod to which instance belongs to. Eg: pod1.",
      "Type" : "String"
    },
	"VPC": {
	  "Description": "Name of the VPC to which the pod. Eg: vpc1, vpc2",
	  "Type": "String"
    },
    "PodType": {
	  "Description": "The type of pod to which services belong",
	  "Type": "String",
	  "AllowedValues": ["device","workflow","cross-region", "infra", "tenzing","hillary","sbs","jss"],
	  "ConstraintDescription": "Must be valid pod type name"
    },
    "DeploymentScriptsDirectory" : {
      "Description" : "Directory where the chef deployment scripts exist",
      "Type" : "String",
	  "Default": "/home/ec2-user"
    },
	"IamInstanceProfile": {
		"Description" : "IAM Instance Profile to be attached",
		"Type" : "String"
	},	
      "OSType" : {
      "Description" : "Type of the OperatingSystem on which the AMI is based",
      "Type" : "String",
      "AllowedValues" : [ "RHEL", "AmazonLinux"]
    }
  },
  "Mappings" : {
     "OSMappings" : {
        "RHEL"      : { "BlockDeviceName" : "/dev/sda1"},
        "AmazonLinux": { "BlockDeviceName" : "/dev/xvda"}
     }
  },
  
  "Resources" : {
	
    "BastionSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Allow all outbound access. Only allow incoming ssh from HP",
        "SecurityGroupIngress" : [
			{"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : "15.0.0.0/10"},
			{"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : "15.64.0.0/11"},
			{"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : "15.96.0.0/13"}
        ],
		"VpcId" : {"Ref" : "VPCID"}
      }
    },

	"BastionInstance" : {
	  "Type" : "AWS::EC2::Instance",
	  "Properties" : {
	  	"KeyName" : { "Ref" : "KeyName" },
	  	"ImageId" : { "Ref" : "AMIID" },
	  	"SecurityGroupIds" : [ {"Ref" : "BastionSecurityGroup"} ],
		"IamInstanceProfile" : { "Ref" : "IamInstanceProfile"},
	  	"InstanceType" : { "Ref" : "InstanceType" },
	  	"BlockDeviceMappings" : [
	  		{
	  		"DeviceName" : { "Fn::FindInMap" : [ "OSMappings", { "Ref" : "OSType" }, "BlockDeviceName"]},
	  		"Ebs" : { "VolumeSize" : { "Ref" : "VolumeSize" }, "DeleteOnTermination" : "true"}
	  		}
	  	],
		"SubnetId": { "Ref" : "SubnetID" },
		"Tags" : [ 
			{"Key" : "Environment", "Value" : { "Ref" : "Environment" } },
			{"Key" : "Pod", "Value" : { "Ref" : "Pod" } },
			{"Key" : "Name", "Value" : "bastion"},
			{"Key" : "PodType", "Value" : "PodType"},
			{"Key" : "State", "Value" : "Critical"},
			{"Key" : "VPC", "Value" : "VPC"}
			  
		],
		"UserData" : { 
			"Fn::Base64" : { "Fn::Join" : ["", [
				"#!/bin/bash -ex", "\n",
				"cd ",{"Ref" : "DeploymentScriptsDirectory"}, "\n",
				"sudo chef-client -z -E ",{"Ref" : "Environment"},{"Ref" : "Pod"}," -r \"recipe[bastion::applyEnvironment]\" -l info","\n"
			]]}}
	  }
	},
	
	"BastionEIP": {
      "Type" : "AWS::EC2::EIP",
      "Properties" : {
        "InstanceId" : { "Ref" : "BastionInstance" }
      }
    }
  
  },
  
   "Outputs" : {
	  "BastionIP" : {
	  	"Description": "IP address of the Bastion node",  
	  	"Value" : { "Ref" : "BastionEIP" }
	  },
	  "BastionSubnetID" : {
	  	"Description": "Subnet ID of the Bastion node",  
	  	"Value" : { "Ref" : "SubnetID" }
	  }
	}
}
